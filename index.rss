<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Boletim diário de segurança</title><link>https://boletimsec.com.br/boletim-diario-ciberseguranca/</link><description>NGSX RSS Feed</description><language>pt-BR</language><generator>rfeed v1.1.1</generator><docs>https://github.com/svpino/rfeed/blob/master/README.md</docs><item><title>* IPs da Amazon Usados em Ataque Coordenado Contra Servidores.</title><link>https://boletimsec.com.br/boletim-diario-ciberseguranca/</link><description>Pesquisadores de segurança cibernética divulgaram detalhes de uma operação coordenada de varredura na nuvem que explorou 75 pontos de exposição em diversos sistemas. A atividade foi detectada em 8 de maio de 2025 e envolveu 251 endereços IP maliciosos, todos hospedados pela Amazon no Japão. Segundo a empresa, os IPs exibiram 75 comportamentos distintos, incluindo exploração de vulnerabilidades conhecidas (CVEs), sondagens por configurações incorretas e atividades de reconhecimento. Todos os IPs estavam inativos antes e depois do evento, o que sugere aluguel temporário de infraestrutura para uma única operação. Os alvos incluíram tecnologias amplamente utilizadas, como Adobe ColdFusion, Apache Struts, Apache Tomcat, Drupal, Elasticsearch e Oracle WebLogic. A campanha utilizou desde falhas antigas, como CVE-2014-6271 (Shellshock), até vulnerabilidades críticas em ColdFusion (CVE-2018-15961), Struts (CVE-2017-5638) e Elasticsearch (CVE-2015-1427). Outras ações detectadas incluíram varredura de scripts CGI, exposição de variáveis de ambiente, busca por configurações do Git, tentativas de upload de shell e verificação de autores no WordPress. A sobreposição de 251 IPs nos três principais ataques indica uma única operação utilizando uma ferramenta ou operador centralizado. Especialistas alertam que, embora esses IPs devam ser bloqueados, futuras tentativas de exploração podem vir de outras infraestruturas temporárias. O caso destaca o aumento de operações oportunistas, porém sofisticadas, com uso de recursos em nuvem.</description><guid isPermaLink="true">https://boletimsec.com.br/boletim-diario-ciberseguranca/</guid></item><item><title>* Falha no OneDrive Permite Acesso Total com Upload de um Único Arquivo.</title><link>https://boletimsec.com.br/boletim-diario-ciberseguranca/</link><description>Uma falha crítica foi descoberta no seletor de arquivos do Microsoft OneDrive, permitindo que sites obtenham acesso total ao armazenamento em nuvem do usuário, mesmo quando apenas um único arquivo é carregado. O problema está relacionado a permissões excessivamente amplas no protocolo OAuth, combinadas com telas de consentimento pouco claras, que não explicam corretamente o nível de acesso concedido. Isso pode levar usuários a autorizar, sem saber, que aplicativos acessem todos os seus arquivos. Serviços integrados ao OneDrive, como Slack, Trello, ClickUp e até assistentes virtuais, podem estar vulneráveis devido a essa configuração. A falha decorre da ausência de escopos granulares no OAuth do OneDrive, que solicita permissão para leitura de todo o drive mesmo em uploads pontuais. A situação se agrava com a prática de armazenar tokens de acesso de forma insegura no navegador, em texto claro, e o uso de tokens de atualização, que garantem acesso contínuo sem nova permissão do usuário. Isso aumenta os riscos de vazamento de dados e compromete a segurança tanto de usuários comuns quanto de empresas. A Microsoft reconheceu a falha, mas ainda não liberou uma correção. Enquanto isso, recomenda-se desativar temporariamente o uso do OneDrive para uploads via OAuth ou, ao menos, evitar o uso de tokens de atualização e assegurar que tokens de acesso sejam armazenados com segurança e descartados quando não forem mais necessários. Essa descoberta ressalta a importância da gestão cuidadosa de permissões OAuth e da revisão constante de práticas de segurança em integrações com serviços em nuvem.</description><guid isPermaLink="true">https://boletimsec.com.br/boletim-diario-ciberseguranca/</guid></item><item><title>* Malware Silencioso Transforma Câmeras e Roteadores em Mineradoras.</title><link>https://boletimsec.com.br/boletim-diario-ciberseguranca/</link><description>Uma nova botnet chamada PumaBot está mirando dispositivos IoT baseados em Linux para roubar credenciais SSH e minerar criptomoedas de forma ilegal. Desenvolvida em Go, a botnet realiza ataques de força bruta para acessar instâncias SSH e expandir sua rede de dispositivos comprometidos. Diferente de outras ameaças, o PumaBot não realiza varreduras abertas na internet. Em vez disso, obtém uma lista de alvos a partir de um servidor de comando e controle (C2) e tenta invadir as máquinas por meio de senhas fracas. Após o acesso, estabelece persistência usando arquivos de serviço do sistema, como um falso redis.service. O malware também verifica se o sistema não é um honeypot e procura por menções à fabricante “Pumatronix”, o que pode indicar um foco específico ou uma tentativa de evitar seus equipamentos. Uma vez dentro do sistema, ele se instala em /lib/redis para parecer legítimo e cria um serviço persistente no systemd. Em seguida, executa comandos como “xmrig” e “networkxm”, típicos de mineração de criptomoedas. Os comandos são executados sem caminhos completos, sugerindo que os arquivos são baixados ou descompactados em outras partes do sistema. Além disso, o PumaBot instala outros componentes, como o “ddaemon”, um backdoor em Go, e scripts como “installx.sh” e “jc.sh”, que substituem bibliotecas legítimas por versões maliciosas. Um dos arquivos, “pam_unix.so”, atua como rootkit, interceptando logins bem-sucedidos e salvando as credenciais em um arquivo oculto. O malware ainda monitora alterações nesse arquivo para exfiltrar os dados capturados. Devido à sua capacidade de propagação automática, recomenda-se monitorar tentativas de login SSH, revisar serviços systemd, aplicar regras rígidas de firewall e evitar o uso de cabeçalhos HTTP incomuns.</description><guid isPermaLink="true">https://boletimsec.com.br/boletim-diario-ciberseguranca/</guid></item></channel></rss>